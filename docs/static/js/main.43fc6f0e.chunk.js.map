{"version":3,"sources":["assets/images/no-image.png","types/index.js","config/axios.js","actions/peliculasActions.js","components/PeliculasGrid.js","components/Spinner.js","pages/Home.js","components/CastSlideshow.js","components/SimilarMovie.js","pages/DetallePelicula.js","components/Navbar.js","pages/BuscarPage.js","reducers/peliculasReducer.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["COMENZAR_DESCARGA_PELICULAS","DESCARGA_PELICULAS_EXITO","DESCARGA_PELICULAS_ERROR","OBTENER_PELICULA_DETALLE","PELICULA_DETALLE_EXITO","PELICULA_DETALLE_ERROR","OBTENER_PELICULA_CAST","PELICULA_CAST_EXITO","PELICULA_CAST_ERROR","OBTENER_PELICULA_SIMILAR","PELICULA_SIMILAR_EXITO","PELICULA_SIMILAR_ERROR","OBTENER_PELICULAS_BUSCAR","PELICULAS_BUSCAR_EXITO","PELICULAS_BUSCAR_ERROR","clienteAxios","axios","create","baseURL","params","api_key","language","obtenerPeliculas","type","payload","obtenerPeliculasExito","peliculas","obtenerPeliculasError","estado","obtenerPeliculaDetalleAction","id","dispatch","a","obtenerPeliculaDetalle","get","respuesta","obtenerPeliculaDetalleExito","data","obtenerPeliculaDetalleError","pelicula","obtenerCastingPelicula","obtenerCastingPeliculaExito","casting","obtenerCastingPeliculaError","obtenerPeliculasSimilares","obtenerPeliculasSimilaresExito","peliculasSimilares","obtenerPeliculasSimilaresError","obtenerPeliculasBuscar","obtenerPeliculasBuscarExito","obtenerPeliculasBuscarError","PeliculasGrid","history","useHistory","useDispatch","map","className","data-mdb-ripple-color","onClick","push","redireccionarDetallePelicula","src","poster_path","noImage","alt","title","style","maxWidth","original_title","dayjs","release_date","format","count","size","activeColor","edit","value","vote_average","Spinner","role","Home","useState","perPage","setperPage","useEffect","page","results","obtenerPeliculasAction","useSelector","state","loading","disabled","xmlns","width","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","CastSlideshow","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","responsive","breakpoint","settings","actor","profile_path","name","character","SimilarMovie","peliculasSimilar","overview","DetallePelicula","props","match","cast","obtenerCastingPeliculaAction","obtenerPeliculasSimilaresAction","peliculaDetalle","to","replace","backgroundImage","backdrop_path","height","backgroundColor","href","homepage","target","rel","tagline","genres","genero","Navbar","texto","textBuscar","setTextBuscar","onSubmit","e","preventDefault","trim","placeholder","aria-label","aria-describedby","onChange","BuscarPage","text","query","include_adult","cargarBuscarPeliculas","buscarPeliculas","peliculasBuscar","length","initialState","error","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.43fc6f0e.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/no-image.28020e3b.png\";","/***peliculas */\r\n\r\n/**OBTENER TODOS LAs PELICULAS */\r\nexport const COMENZAR_DESCARGA_PELICULAS = 'COMENZAR_DESCARGA_PELICULAS'\r\nexport const DESCARGA_PELICULAS_EXITO = 'DESCARGA_PELICULAS_EXITO'\r\nexport const DESCARGA_PELICULAS_ERROR = 'DESCARGA_PELICULAS_ERROR'\r\n\r\n/** INFORMACIÓN DE UNA PELICULA PARA VER EL DETALLE */\r\nexport const OBTENER_PELICULA_DETALLE = 'OBTENER_PELICULA_DETALLE'\r\nexport const PELICULA_DETALLE_EXITO = 'PELICULA_DETALLE_EXITO'\r\nexport const PELICULA_DETALLE_ERROR = 'PELICULA_DETALLE_ERROR'\r\n\r\n/**OBTENER EL CAST DE LA PELICULA */\r\nexport const OBTENER_PELICULA_CAST = 'OBTENER_PELICULA_CAST'\r\nexport const PELICULA_CAST_EXITO = 'PELICULA_CAST_EXITO'\r\nexport const PELICULA_CAST_ERROR = 'PELICULA_CAST_ERROR'\r\n\r\n/**OBTENER PELICULAS SIMILARES */\r\nexport const OBTENER_PELICULA_SIMILAR = 'OBTENER_PELICULA_SIMILAR'\r\nexport const PELICULA_SIMILAR_EXITO = 'PELICULA_SIMILAR_EXITO'\r\nexport const PELICULA_SIMILAR_ERROR = 'PELICULA_SIMILAR_ERROR'\r\n\r\n/**BUSCAR PELICULAS */\r\nexport const OBTENER_PELICULAS_BUSCAR = 'OBTENER_PELICULAS_BUSCAR'\r\nexport const PELICULAS_BUSCAR_EXITO = 'PELICULAS_BUSCAR_EXITO'\r\nexport const PELICULAS_BUSCAR_ERROR = 'PELICULAS_BUSCAR_ERROR'\r\n","import axios from 'axios'\r\n\r\nconst clienteAxios = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3',\r\n  params: {\r\n    api_key: '4e5d0990973bb9d400910a2cc2c20688',\r\n    language: 'es-ES',\r\n  },\r\n  // headers: {\r\n  //   'Access-Control-Allow-Origin': '*',\r\n  //   'Content-Type': 'text/plain',\r\n  // },\r\n})\r\n\r\nexport default clienteAxios\r\n","import {\r\n  COMENZAR_DESCARGA_PELICULAS,\r\n  DESCARGA_PELICULAS_EXITO,\r\n  DESCARGA_PELICULAS_ERROR,\r\n  OBTENER_PELICULA_DETALLE,\r\n  PELICULA_DETALLE_EXITO,\r\n  PELICULA_DETALLE_ERROR,\r\n  OBTENER_PELICULA_CAST,\r\n  PELICULA_CAST_EXITO,\r\n  PELICULA_CAST_ERROR,\r\n  OBTENER_PELICULA_SIMILAR,\r\n  PELICULA_SIMILAR_EXITO,\r\n  PELICULA_SIMILAR_ERROR,\r\n  OBTENER_PELICULAS_BUSCAR,\r\n  PELICULAS_BUSCAR_EXITO,\r\n  PELICULAS_BUSCAR_ERROR,\r\n} from '../types'\r\n\r\nimport clienteAxios from '../config/axios'\r\n\r\nexport function obtenerPeliculasAction(perPage) {\r\n  return async (dispatch) => {\r\n    dispatch(obtenerPeliculas())\r\n    try {\r\n      const respuesta = await clienteAxios.get(`/movie/now_playing/`, {\r\n        params: {\r\n          page: perPage,\r\n        },\r\n      })\r\n      dispatch(obtenerPeliculasExito(respuesta.data.results))\r\n    } catch (error) {\r\n      dispatch(obtenerPeliculasError(true))\r\n    }\r\n  }\r\n}\r\n\r\nconst obtenerPeliculas = () => ({\r\n  type: COMENZAR_DESCARGA_PELICULAS,\r\n  payload: true,\r\n})\r\n\r\nconst obtenerPeliculasExito = (peliculas) => ({\r\n  type: DESCARGA_PELICULAS_EXITO,\r\n  payload: peliculas,\r\n})\r\nconst obtenerPeliculasError = (estado) => ({\r\n  type: DESCARGA_PELICULAS_ERROR,\r\n  payload: estado,\r\n})\r\n\r\n//Obtener el detalle de un película\r\nexport function obtenerPeliculaDetalleAction(id) {\r\n  return async (dispatch) => {\r\n    dispatch(obtenerPeliculaDetalle())\r\n    try {\r\n      const respuesta = await clienteAxios.get(`/movie/${id}`)\r\n      dispatch(obtenerPeliculaDetalleExito(respuesta.data))\r\n    } catch (error) {\r\n      dispatch(obtenerPeliculaDetalleError(true))\r\n    }\r\n  }\r\n}\r\n\r\nconst obtenerPeliculaDetalle = () => ({\r\n  type: OBTENER_PELICULA_DETALLE,\r\n  payload: true,\r\n})\r\nconst obtenerPeliculaDetalleExito = (pelicula) => ({\r\n  type: PELICULA_DETALLE_EXITO,\r\n  payload: pelicula,\r\n})\r\nconst obtenerPeliculaDetalleError = (estado) => ({\r\n  type: PELICULA_DETALLE_ERROR,\r\n  payload: estado,\r\n})\r\n\r\n//obtener el casting de la pelicula\r\nexport function obtenerCastingPeliculaAction(id) {\r\n  return async (dispatch) => {\r\n    dispatch(obtenerCastingPelicula())\r\n    try {\r\n      const respuesta = await clienteAxios.get(`/movie/${id}/credits`)\r\n      dispatch(obtenerCastingPeliculaExito(respuesta.data.cast))\r\n    } catch (error) {\r\n      dispatch(obtenerCastingPeliculaError(true))\r\n    }\r\n  }\r\n}\r\n\r\nconst obtenerCastingPelicula = () => ({\r\n  type: OBTENER_PELICULA_CAST,\r\n  payload: true,\r\n})\r\n\r\nconst obtenerCastingPeliculaExito = (casting) => ({\r\n  type: PELICULA_CAST_EXITO,\r\n  payload: casting,\r\n})\r\nconst obtenerCastingPeliculaError = (estado) => ({\r\n  type: PELICULA_CAST_ERROR,\r\n  payload: estado,\r\n})\r\n\r\n//obtener películas similares\r\nexport function obtenerPeliculasSimilaresAction(id) {\r\n  return async (dispatch) => {\r\n    dispatch(obtenerPeliculasSimilares())\r\n    try {\r\n      const respuesta = await clienteAxios.get(`/movie/${id}/similar`)\r\n      dispatch(obtenerPeliculasSimilaresExito(respuesta.data.results))\r\n    } catch (error) {\r\n      dispatch(obtenerPeliculasSimilaresError())\r\n    }\r\n  }\r\n}\r\n\r\nconst obtenerPeliculasSimilares = () => ({\r\n  type: OBTENER_PELICULA_SIMILAR,\r\n  payload: true,\r\n})\r\n\r\nconst obtenerPeliculasSimilaresExito = (peliculasSimilares) => ({\r\n  type: PELICULA_SIMILAR_EXITO,\r\n  payload: peliculasSimilares,\r\n})\r\nconst obtenerPeliculasSimilaresError = (estado) => ({\r\n  type: PELICULA_SIMILAR_ERROR,\r\n  payload: estado,\r\n})\r\n\r\n/**buscar peliculas */\r\nexport function obtenerPeliculasBuscarAction(texto) {\r\n  return async (dispatch) => {\r\n    dispatch(obtenerPeliculasBuscar())\r\n    try {\r\n      const respuesta = await clienteAxios.get('search/movie', {\r\n        params: {\r\n          query: texto,\r\n          page: 1,\r\n          include_adult: false,\r\n        },\r\n      })\r\n      dispatch(obtenerPeliculasBuscarExito(respuesta.data.results))\r\n    } catch (error) {\r\n      dispatch(obtenerPeliculasBuscarError(true))\r\n    }\r\n  }\r\n}\r\n\r\nconst obtenerPeliculasBuscar = () => ({\r\n  type: OBTENER_PELICULAS_BUSCAR,\r\n  payload: true,\r\n})\r\nconst obtenerPeliculasBuscarExito = (peliculas) => ({\r\n  type: PELICULAS_BUSCAR_EXITO,\r\n  payload: peliculas,\r\n})\r\nconst obtenerPeliculasBuscarError = (estado) => ({\r\n  type: PELICULAS_BUSCAR_ERROR,\r\n  payload: estado,\r\n})\r\n","import React from 'react'\r\nimport dayjs from 'dayjs'\r\nimport { useHistory } from 'react-router-dom'\r\nimport ReactStars from 'react-rating-stars-component'\r\nimport { useDispatch } from 'react-redux'\r\nimport noImage from '../assets/images/no-image.png'\r\n\r\nimport { obtenerPeliculaDetalleAction } from '../actions/peliculasActions'\r\n\r\nconst PeliculasGrid = ({ peliculas }) => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  //funcion que redirige de forma programada\r\n  const redireccionarDetallePelicula = (pelicula) => {\r\n    dispatch(obtenerPeliculaDetalleAction(pelicula.id))\r\n    history.push(`/pelicula/${pelicula.id}`)\r\n  }\r\n  return (\r\n    <>\r\n      {peliculas.map((pelicula) => (\r\n        <div className=\"col-md-3 mb-4 position-relative\" key={pelicula.id}>\r\n          <div className=\"card\">\r\n            <div\r\n              className=\"bg-image hover-overlay ripple\"\r\n              data-mdb-ripple-color=\"light\"\r\n            >\r\n              <div\r\n                onClick={() => redireccionarDetallePelicula(pelicula)}\r\n                type=\"button\"\r\n              >\r\n                <img\r\n                  src={\r\n                    pelicula.poster_path\r\n                      ? `http://image.tmdb.org/t/p/w500/${pelicula.poster_path}`\r\n                      : noImage\r\n                  }\r\n                  className=\"img-fluid\"\r\n                  alt={pelicula.title}\r\n                />\r\n                <div className=\"card-body\">\r\n                  <h5 className=\"card-title\">{pelicula.title}</h5>\r\n                  <span\r\n                    className=\"d-inline-block text-truncate\"\r\n                    style={{ maxWidth: '200px' }}\r\n                  >\r\n                    {pelicula.original_title}\r\n                  </span>\r\n                  <div className=\"\">\r\n                    <span className=\"\">\r\n                      Fecha de estreno{' '}\r\n                      {dayjs(pelicula.release_date).format('DD/MM/YYYY')}\r\n                    </span>\r\n                    <span>\r\n                      <ReactStars\r\n                        count={10}\r\n                        size={24}\r\n                        activeColor=\"#ffd700\"\r\n                        edit={false}\r\n                        value={pelicula.vote_average}\r\n                      />\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PeliculasGrid\r\n","import React from 'react'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"d-flex justify-content-center align-items-center\">\r\n      <div className=\"spinner-border\" role=\"status\">\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import React, { useEffect, useState } from 'react'\r\nimport PeliculasGrid from '../components/PeliculasGrid'\r\nimport Spinner from '../components/Spinner'\r\n\r\n//redux\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n//actions\r\nimport { obtenerPeliculasAction } from '../actions/peliculasActions'\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch()\r\n  const [perPage, setperPage] = useState(1)\r\n\r\n  useEffect(() => {\r\n    if (perPage === 0) {\r\n      setperPage(1)\r\n    } else {\r\n      const cargarPeliculas = () => dispatch(obtenerPeliculasAction(perPage))\r\n      cargarPeliculas()\r\n    }\r\n  }, [dispatch, perPage])\r\n  //obtener el state\r\n  const peliculas = useSelector((state) => state.peliculas.peliculas)\r\n  const loading = useSelector((state) => state.peliculas.loading)\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <>\r\n          <div className=\"row\">\r\n            <PeliculasGrid peliculas={peliculas} />\r\n          </div>\r\n          <div className=\"mb-5 d-flex justify-content-end\">\r\n            <button\r\n              className=\"btn btn-outline-secondary m-2\"\r\n              disabled={perPage === 1 ? true : false}\r\n              onClick={() => setperPage(perPage - 1)}\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"15px\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M15 19l-7-7 7-7\"\r\n                />\r\n              </svg>\r\n            </button>\r\n            <button\r\n              className=\"btn btn-outline-secondary m-2\"\r\n              onClick={() => setperPage(perPage + 1)}\r\n              disabled={perPage === 59 ? true : false}\r\n            >\r\n              <svg\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                width=\"15px\"\r\n                fill=\"none\"\r\n                viewBox=\"0 0 24 24\"\r\n                stroke=\"currentColor\"\r\n              >\r\n                <path\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  strokeWidth={2}\r\n                  d=\"M9 5l7 7-7 7\"\r\n                />\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home\r\n","import React from 'react'\r\nimport Slider from 'react-slick'\r\nimport noImage from \"../assets/images/no-image.png\"\r\nconst CastSlideshow = ({ casting }) => {\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 3,\r\n    initialSlide: 0,\r\n      responsive: [\r\n        {\r\n          breakpoint: 1024,\r\n          settings: {\r\n            slidesToShow: 3,\r\n            slidesToScroll: 3,\r\n            infinite: true,\r\n            dots: true\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 600,\r\n          settings: {\r\n            slidesToShow: 2,\r\n            slidesToScroll: 2,\r\n            initialSlide: 2\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1\r\n          }\r\n        }\r\n      ]\r\n  }\r\n  return (\r\n    <>\r\n      <Slider {...settings} className=\"m-5\">\r\n        {casting.map((actor) => (\r\n          <div className=\"bg-image\" key={actor.id}>\r\n            <img\r\n              src={actor.profile_path ? `http://image.tmdb.org/t/p/w300/${actor.profile_path}` : noImage}\r\n              className=\"img-fluid rounded\"\r\n              alt=\"Sample\"\r\n            />\r\n            <div\r\n            \r\n            >\r\n              <div className=\"\">\r\n                <h3 className=\"\">{actor.name}</h3>\r\n                <p className=\"d-block\">{actor.character}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </Slider>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CastSlideshow\r\n","import React from 'react'\r\nimport Slider from 'react-slick'\r\nimport dayjs from 'dayjs'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { useDispatch } from 'react-redux'\r\nimport { obtenerPeliculaDetalleAction } from '../actions/peliculasActions'\r\n\r\nconst SimilarMovie = ({ peliculasSimilares }) => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  //funcion que redirige de forma programada\r\n  const redireccionarDetallePelicula = (pelicula) => {\r\n    dispatch(obtenerPeliculaDetalleAction(pelicula.id))\r\n    history.push(`/pelicula/${pelicula.id}`)\r\n  }\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 4,\r\n    initialSlide: 0,\r\n      responsive: [\r\n        {\r\n          breakpoint: 1024,\r\n          settings: {\r\n            slidesToShow: 3,\r\n            slidesToScroll: 3,\r\n            infinite: true,\r\n            dots: true\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 600,\r\n          settings: {\r\n            slidesToShow: 2,\r\n            slidesToScroll: 2,\r\n            initialSlide: 2\r\n          }\r\n        },\r\n        {\r\n          breakpoint: 480,\r\n          settings: {\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1\r\n          }\r\n        }\r\n      ]\r\n  }\r\n  return (\r\n    <Slider {...settings} className=\"m-4\">\r\n      {peliculasSimilares.map((peliculasSimilar) => (\r\n        <div\r\n          className=\"card p-2 border\"\r\n          \r\n          key={peliculasSimilar.id}\r\n          \r\n        >\r\n          <div className=\"row g-0 \">\r\n            <div className=\"col-md-4\" type=\"button\"\r\n          onClick={() => redireccionarDetallePelicula(peliculasSimilar)}>\r\n              <img\r\n                src={`http://image.tmdb.org/t/p/w300/${peliculasSimilar.poster_path}`}\r\n                alt={peliculasSimilar.title}\r\n                className=\"img-fluid rounded\"\r\n              />\r\n            </div>\r\n            <div className=\"col-md-8\">\r\n              <div className=\"card-body p-3\">\r\n                <h5 className=\"card-title d-inline-block text-truncate\">\r\n                  {peliculasSimilar.title}\r\n                </h5>\r\n                <p\r\n                  className=\"card-text d-inline-block text-truncate\"\r\n                  style={{ maxWidth: '200px' }}\r\n                >\r\n                  {peliculasSimilar.overview}\r\n                </p>\r\n                <p className=\"card-text\">\r\n                  <small className=\"text-muted\">\r\n                    {dayjs(peliculasSimilar.release_date).format('DD/MM/YYYY')}\r\n                  </small>\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </Slider>\r\n  )\r\n}\r\n\r\nexport default SimilarMovie\r\n","import React, { useEffect } from 'react'\r\nimport CastSlideshow from '../components/CastSlideshow'\r\nimport SimilarMovie from '../components/SimilarMovie'\r\nimport Spinner from '../components/Spinner'\r\nimport noImage from '../assets/images/no-image.png'\r\nimport {\r\n  obtenerPeliculaDetalleAction,\r\n  obtenerCastingPeliculaAction,\r\n  obtenerPeliculasSimilaresAction,\r\n} from '../actions/peliculasActions'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport dayjs from 'dayjs'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst DetallePelicula = (props) => {\r\n  const { id } = props.match.params\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    //consultar api\r\n    const cargarPeliculaDetalle = () =>\r\n      dispatch(obtenerPeliculaDetalleAction(id))\r\n    cargarPeliculaDetalle()\r\n\r\n    const cargarCastingPelicula = () =>\r\n      dispatch(obtenerCastingPeliculaAction(id))\r\n    cargarCastingPelicula()\r\n\r\n    const cargarPeliculasSimilares = () => {\r\n      dispatch(obtenerPeliculasSimilaresAction(id))\r\n    }\r\n    cargarPeliculasSimilares()\r\n  }, [dispatch, id])\r\n\r\n  const peliculaDetalle = useSelector(\r\n    (state) => state.peliculas.peliculaDetalle,\r\n  )\r\n  const loading = useSelector((state) => state.peliculas.loading)\r\n  const casting = useSelector((state) => state.peliculas.casting)\r\n  const peliculasSimilares = useSelector(\r\n    (state) => state.peliculas.peliculasSimilares,\r\n  )\r\n\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <>\r\n          <Link to=\"/\" replace className=\"text-black\">\r\n            <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"30px\"\r\n              fill=\"none\"\r\n              viewBox=\"0 0 24 24\"\r\n              stroke=\"currentColor\"\r\n            >\r\n              <path\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n                strokeWidth={2}\r\n                d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"\r\n              />\r\n            </svg>\r\n          </Link>\r\n          <div\r\n            className=\"bg-image mt-3 rounded  text-white\"\r\n            style={{\r\n              backgroundImage: `url(http://image.tmdb.org/t/p/w500/${peliculaDetalle.backdrop_path})`,\r\n              height: '65vh',\r\n            }}\r\n          >\r\n            <div\r\n              className=\"mask\"\r\n              style={{ backgroundColor: 'rgba(0, 0, 0, 0.8)' }}\r\n            >\r\n              <div className=\"row\">\r\n                <div className=\"col-6 p-5\">\r\n                  <img\r\n                    src={\r\n                      peliculaDetalle.backdrop_path\r\n                        ? `http://image.tmdb.org/t/p/w500/${peliculaDetalle.backdrop_path}`\r\n                        : noImage\r\n                    }\r\n                    className=\"img-fluid rounded mb-3\"\r\n                    alt={peliculaDetalle.title}\r\n                  />\r\n                  <a\r\n                    href={peliculaDetalle.homepage}\r\n                    target=\"_blank\"\r\n                    className=\"text-white\"\r\n                    rel=\"noreferrer\"\r\n                  >\r\n                    Homepage\r\n                  </a>\r\n                </div>\r\n                <div className=\"col-6 p-5 text-white\">\r\n                  <h1>{peliculaDetalle.title}</h1>\r\n                  <span className=\"\">{peliculaDetalle.tagline}</span>\r\n                  <section className=\"w-75\">\r\n                    {peliculaDetalle.genres ? (\r\n                      <ul className=\"d-flex list-unstyled justify-content-between mt-3\">\r\n                        {peliculaDetalle.genres.map((genero) => (\r\n                          <li key={genero.id} className=\"\">\r\n                            {genero.name}\r\n                          </li>\r\n                        ))}\r\n                      </ul>\r\n                    ) : null}\r\n                  </section>\r\n                  <span className=\"d-block mb-3\">\r\n                    Fecha de estreno{' '}\r\n                    {dayjs(peliculaDetalle.release_date).format('DD/MM/YYYY')}\r\n                  </span>\r\n                  <section>{peliculaDetalle.overview}</section>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <section className=\"mt-3\">\r\n            <h3>Reparto principal</h3>\r\n            <CastSlideshow casting={casting} />\r\n          </section>\r\n\r\n          <section className=\"mt-5 mb-5 p-2\" style={{backgroundColor:'rgba(0,0,0,0.1)'}}>\r\n            <h3>Películas similares</h3>\r\n            <SimilarMovie peliculasSimilares={peliculasSimilares} />\r\n          </section>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default DetallePelicula\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'\r\nconst Navbar = () => {\r\n  //const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const [textBuscar, setTextBuscar] = useState({\r\n    texto: '',\r\n  })\r\n\r\n  const actualizarState = (e) => {\r\n    setTextBuscar({\r\n      ...textBuscar,\r\n      [e.target.name]: e.target.value,\r\n    })\r\n  }\r\n  const buscarPelicula = (e) => {\r\n    e.preventDefault()\r\n    if (textBuscar.texto.trim() === '') {\r\n      return\r\n    } else {\r\n      history.push(`/buscar/${textBuscar.texto}`)\r\n      \r\n    }\r\n  }\r\n  return (\r\n    <nav className=\"navbar navbar-dark bg-dark\">\r\n      <div className=\"container\">\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          App Movies\r\n        </Link>\r\n        <form className=\"d-flex input-group w-auto\" onSubmit={buscarPelicula}>\r\n          <input\r\n            type=\"search\"\r\n            className=\"form-control rounded\"\r\n            placeholder=\"Buscar película\"\r\n            aria-label=\"Search\"\r\n            aria-describedby=\"search-addon\"\r\n            onChange={actualizarState}\r\n            name=\"texto\"\r\n          />\r\n          <button\r\n            className=\"input-group-text border-0\"\r\n            id=\"search-addon\"\r\n            type=\"submit\"\r\n          >\r\n            <i className=\"fas fa-search\"></i>\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useEffect } from 'react'\r\nimport { obtenerPeliculasBuscarAction } from '../actions/peliculasActions'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport PeliculasGrid from '../components/PeliculasGrid'\r\nimport Spinner from '../components/Spinner'\r\nconst BuscarPage = (props) => {\r\n  const dispatch = useDispatch()\r\n  const { text } = props.match.params\r\n  useEffect(() => {\r\n    //consultar api\r\n    const cargarBuscarPeliculas = () =>\r\n      dispatch(obtenerPeliculasBuscarAction(text))\r\n    cargarBuscarPeliculas()\r\n  }, [dispatch, text])\r\n  const buscarPeliculas = useSelector(\r\n    (state) => state.peliculas.peliculasBuscar,\r\n  )\r\n  const loading = useSelector((state) => state.peliculas.loading)\r\n  \r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Spinner />\r\n      ) : (\r\n        <>\r\n          {buscarPeliculas.length > 0 ? (\r\n            <>\r\n              <h1>Resultados para: {text}</h1>\r\n              <div className=\"row\">\r\n                <PeliculasGrid peliculas={buscarPeliculas} />\r\n              </div>\r\n            </>\r\n          ) : (\r\n            <p>No hay peliculas</p>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default BuscarPage\r\n","import {\r\n  COMENZAR_DESCARGA_PELICULAS,\r\n  DESCARGA_PELICULAS_EXITO,\r\n  DESCARGA_PELICULAS_ERROR,\r\n  OBTENER_PELICULA_DETALLE,\r\n  PELICULA_DETALLE_EXITO,\r\n  PELICULA_DETALLE_ERROR,\r\n  OBTENER_PELICULA_CAST,\r\n  PELICULA_CAST_EXITO,\r\n  PELICULA_CAST_ERROR,\r\n  OBTENER_PELICULA_SIMILAR,\r\n  PELICULA_SIMILAR_EXITO,\r\n  PELICULA_SIMILAR_ERROR,\r\n  OBTENER_PELICULAS_BUSCAR,\r\n  PELICULAS_BUSCAR_EXITO,\r\n  PELICULAS_BUSCAR_ERROR,\r\n} from '../types'\r\n\r\n//cada reducer tiene su state\r\nconst initialState = {\r\n  peliculas: [],\r\n  peliculaDetalle: '',\r\n  casting: [],\r\n  error: '',\r\n  loading: false,\r\n  peliculasSimilares: [],\r\n  peliculasBuscar: [],\r\n}\r\n\r\nexport default function productosReducer(state = initialState, action) {\r\n  switch (action.type) {\r\n    case COMENZAR_DESCARGA_PELICULAS:\r\n    case OBTENER_PELICULA_DETALLE:\r\n    case OBTENER_PELICULA_CAST:\r\n    case OBTENER_PELICULA_SIMILAR:\r\n    case OBTENER_PELICULAS_BUSCAR:\r\n      return {\r\n        ...state,\r\n        loading: action.payload,\r\n      }\r\n\r\n    case DESCARGA_PELICULAS_EXITO:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: false,\r\n        peliculas: action.payload,\r\n      }\r\n    case PELICULAS_BUSCAR_EXITO:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: false,\r\n        peliculasBuscar: action.payload,\r\n      }\r\n    case PELICULA_DETALLE_EXITO:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: false,\r\n        peliculaDetalle: action.payload,\r\n      }\r\n    case PELICULA_CAST_EXITO:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: false,\r\n        casting: action.payload,\r\n      }\r\n    case PELICULA_SIMILAR_EXITO:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: false,\r\n        peliculasSimilares: action.payload,\r\n      }\r\n    case DESCARGA_PELICULAS_ERROR:\r\n    case PELICULA_DETALLE_ERROR:\r\n    case PELICULA_CAST_ERROR:\r\n    case PELICULA_SIMILAR_ERROR:\r\n    case PELICULAS_BUSCAR_ERROR:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: action.payload,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import { combineReducers } from 'redux'\r\nimport peliculasReducer from './peliculasReducer'\r\nexport default combineReducers({\r\n  peliculas: peliculasReducer,\r\n})\r\n","import { createStore, applyMiddleware } from 'redux'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport thunk from 'redux-thunk'\r\n\r\nimport rootReducer from './reducers'\r\n\r\nconst initialState = {}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware)),\r\n)\r\n\r\nexport default store","import React from 'react'\n//pages\nimport Home from './pages/Home'\nimport DetallePelicula from './pages/DetallePelicula'\nimport Navbar from './components/Navbar'\nimport BuscarPage from './pages/BuscarPage'\n\n//Routing\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n//redux\nimport { Provider } from 'react-redux'\nimport store from './store'\nconst App = () => {\n  return (\n    <>\n      <Provider store={store}>\n        <Router>\n          <div className=\"\">\n            <Navbar />\n            <div className=\"container mt-3\">\n              <Switch>\n                <Route exact path=\"/\" component={Home}></Route>\n                <Route\n                  exact\n                  path=\"/pelicula/:id\"\n                  component={DetallePelicula}\n                ></Route>\n                <Route\n                  exact\n                  path=\"/buscar/:text\"\n                  component={BuscarPage}\n                ></Route>\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </Provider>\n    </>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}